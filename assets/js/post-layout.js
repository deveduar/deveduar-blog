function setupPostTitleAndMetadata() {
    const postContent = document.querySelector('.post-content');
    const metadataContainer = document.querySelector('.post-meta-container');
    
    if (!postContent || !metadataContainer) {
        console.warn('Post content or metadata container not found.');
        return;
    }
    
    // Get the title from the hidden div generated by Liquid
    const pageTitleElement = document.getElementById('page-title');
    // Ensure this element stays hidden
    if (pageTitleElement) {
        pageTitleElement.style.display = 'none';
    }
    
    const pageTitle = pageTitleElement ? pageTitleElement.textContent.trim() : '';
    
    if (!pageTitle) {
        console.warn('Page title not found.');
        return;
    }
    
    // First, check if we already have a dynamically generated title
    let titleH1 = postContent.querySelector('h1[data-main-title="true"]');
    
    // If no dynamically generated title exists, look for the first content H1
    if (!titleH1) {
        titleH1 = postContent.querySelector('h1');
    }
    
    // If no H1 exists at all, create one
    if (!titleH1) {
        titleH1 = document.createElement('h1');
        titleH1.className = 'post-title';
        titleH1.id = 'post-title';
        titleH1.setAttribute('data-main-title', 'true');
        
        // Insert at the beginning of the content
        if (postContent.firstChild) {
            postContent.insertBefore(titleH1, postContent.firstChild);
        } else {
            postContent.appendChild(titleH1);
        }
        
        console.log('Dynamically created H1:', pageTitle);
    } else if (!titleH1.hasAttribute('data-main-title')) {
        // This is a content H1 that we're repurposing as the main title
        titleH1.id = 'post-title';
        titleH1.setAttribute('data-main-title', 'true');
        console.log('Using existing content H1 as title');
    }
    
    // Update the title text
    titleH1.textContent = pageTitle;
    
    // Move the metadata container below the H1
    titleH1.after(metadataContainer);
    metadataContainer.style.display = 'block';
    console.log('Metadata moved below the H1.');
    
    // Remove any duplicate H1s that might have been created
    const allH1s = postContent.querySelectorAll('h1[data-main-title="true"]');
    if (allH1s.length > 1) {
        for (let i = 1; i < allH1s.length; i++) {
            allH1s[i].remove();
            console.log('Removed duplicate H1');
        }
    }
}
  
// Run on initial load
document.addEventListener('DOMContentLoaded', function() {
    console.log('DOM loaded - initializing post layout');
    setupPostTitleAndMetadata();
  });

// Make compatible with Turbo
if (typeof Turbo !== 'undefined' || 'Turbo' in window) {
    document.addEventListener('turbo:load', function() {
        console.log('Turbo load - initializing post layout');
        // Hide page-title div immediately to prevent flicker
        const pageTitleElement = document.getElementById('page-title');
        if (pageTitleElement) {
            pageTitleElement.style.display = 'none';
        }
        
        setupPostTitleAndMetadata();
    });
    
    document.addEventListener('turbo:render', function() {
        console.log('Turbo render - initializing post layout');
        // Hide page-title div immediately to prevent flicker
        const pageTitleElement = document.getElementById('page-title');
        if (pageTitleElement) {
            pageTitleElement.style.display = 'none';
        }
        
        // Use setTimeout to ensure the DOM is fully updated
        setTimeout(function() {
            setupPostTitleAndMetadata();
            // Initialize TOC after title is setup
            if (typeof initTableOfContents === 'function' || 
                (typeof window !== 'undefined' && window.TableOfContents && typeof window.TableOfContents.init === 'function')) {
                console.log('Initializing TOC after post layout setup');
                if (typeof initTableOfContents === 'function') {
                    initTableOfContents();
                } else if (window.TableOfContents && typeof window.TableOfContents.init === 'function') {
                    window.TableOfContents.init();
                }
            }
        }, 100); // Small delay to ensure DOM is fully updated
    });
}

// Export for module usage
if (typeof module !== 'undefined' && module.exports) {
    module.exports = { setupPostTitleAndMetadata };
} else if (typeof window !== 'undefined') {
    window.PostLayout = { setup: setupPostTitleAndMetadata };
}